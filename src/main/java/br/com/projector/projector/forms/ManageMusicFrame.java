/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.projector.projector.forms;

import br.com.projector.projector.dtos.ImportingMusicDTO;
import br.com.projector.projector.models.Music;
import br.com.projector.projector.repositories.OpenMusicRepository;
import br.com.projector.projector.services.ManageMusicService;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;

/**
 *
 * @author guilherme
 */
public class ManageMusicFrame extends javax.swing.JFrame {

    private ManageMusicService service = new ManageMusicService();
    private Integer editingMusicId = null;
    private OpenMusicRepository openMusicRepo;

    /**
     * Creates new form CreateMusicFrame
     */
    public ManageMusicFrame() {
        initComponents();
        reloadArtists();
    }

    public ManageMusicFrame(Music music) {
        initComponents();
        this.editingMusicId = music.getId();

        jTextFieldTitle.setText(music.getName());

        if (music.getArtist() != null) {
            addArtist(music.getArtist().getName());
        }

        if (music.getPhrases() != null) {
            String phrases = music.getPhrases().stream().collect(Collectors.joining("\n"));
            jTextAreaPhrases.setText(phrases);
        }
    }

    public ManageMusicFrame(ImportingMusicDTO importing) {
        initComponents();
        jTextFieldTitle.setText(importing.getName());
        addArtist(importing.getArtist());

        if (importing.getPhrases() != null) {
            String phrases = importing.getPhrases().stream().collect(Collectors.joining("\n"));
            jTextAreaPhrases.setText(phrases);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaPhrases = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxArtist = new javax.swing.JComboBox<>();
        jButtonCreateArtist = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Criar Letra");

        jLabel1.setText("Título");

        jLabel2.setText("Artista");

        jTextAreaPhrases.setColumns(20);
        jTextAreaPhrases.setRows(5);
        jScrollPane1.setViewportView(jTextAreaPhrases);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Letra");

        jButtonCreateArtist.setText("Novo");
        jButtonCreateArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateArtistActionPerformed(evt);
            }
        });

        jButtonSave.setText("Salvar");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxArtist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCreateArtist))))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButtonCreateArtist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateArtistActionPerformed
        String artistName = JOptionPane.showInputDialog(this, "Digite o nome do artista");

        if (artistName == null) {
            return;
        }

        artistName = artistName.trim();

        if (artistName.isEmpty()) {
            return;
        }

        addArtist(artistName);
    }//GEN-LAST:event_jButtonCreateArtistActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        String artistName = (String) jComboBoxArtist.getSelectedItem();

        if (editingMusicId == null) {
            try {
                Music music = service.createMusic(jTextFieldTitle.getText(), artistName, jTextAreaPhrases.getText());
                openMusicRepo.add(music);
                this.dispose();
            } catch (ManageMusicService.PersistenceException ex) {
                Logger.getLogger(ManageMusicFrame.class.getName()).log(Level.SEVERE, null, ex);
                int result = JOptionPane.showConfirmDialog(this, "Essa letra não foi salva. Deseja proseguir em modo comente leitura?", "Erro ao salvar letra.", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {
                    openMusicRepo.add(ex.getMusic());
                    this.dispose();
                }
            } catch (ManageMusicService.MusicAlreadyPresentException ex) {
                Logger.getLogger(ManageMusicFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Letra já cadastrada para o artista.");
            }
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void addArtist(String name) {
        reloadArtists();
        jComboBoxArtist.addItem(name);
        jComboBoxArtist.setSelectedItem(name);
    }

    private void reloadArtists() {
        jComboBoxArtist.removeAllItems();
        service.listArtists().stream().forEach(s -> jComboBoxArtist.addItem(s));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateArtist;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxArtist;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaPhrases;
    private javax.swing.JTextField jTextFieldTitle;
    // End of variables declaration//GEN-END:variables

    void setOpenMusicRepository(OpenMusicRepository musicRepo) {
        this.openMusicRepo = musicRepo;
    }
}
